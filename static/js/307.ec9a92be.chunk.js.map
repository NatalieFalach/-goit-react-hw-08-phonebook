{"version":3,"file":"static/js/307.ec9a92be.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/PhoneMask/PhoneMask.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btnDelete\":\"ContactList_btnDelete__Eeo9v\",\"item\":\"ContactList_item__EZYHO\",\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"modalBody\":\"ContactList_modalBody__-yyZ-\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\nexport const selectHasContacts = state => state.contacts.items.length > 0;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) => {\n      return name.toLowerCase().includes(filter);\n    });\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"phoneLabel\":\"ContactForm_phoneLabel__J-orS\",\"btnSubmit\":\"ContactForm_btnSubmit__+7wnS\",\"errorMessage\":\"ContactForm_errorMessage__HbfEx\"};","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { IMaskInput } from 'react-imask';\n\nconst PhoneMask = React.forwardRef(function PhoneMask(props, ref) {\n  const { onChange, ...other } = props;\n  return (\n    <IMaskInput\n      {...other}\n      mask=\"+({000}) 00 000-00-00\"\n      definitions={{\n        '#': /[1-9]/,\n      }}\n      inputRef={ref}\n      onAccept={value => onChange({ target: { name: props.name, value } })}\n      overwrite\n    />\n  );\n});\n\nPhoneMask.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default PhoneMask;\n","import css from './ContactForm.module.css';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport 'yup-phone';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { operations, selectors } from '../../redux/contacts';\nimport { Box, Button, TextField } from '@mui/material';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PhoneMask from 'components/PhoneMask/PhoneMask';\n\nconst validationSchema = yup.object().shape({\n  name: yup.string().max(30).required(),\n  number: yup.string().phone().required(),\n});\n\nconst ContactForm = ({ editContact, closeEditModal }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectors.selectContacts);\n  const [error, setError] = useState('');\n\n  const formik = useFormik({\n    initialValues: {\n      name: editContact ? editContact.name : '',\n      number: editContact ? editContact.number : '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values, { resetForm }) => {\n      setError('');\n      const name = values.name.toLowerCase().trim();\n      const isExists = contacts.some(\n        item => item.name.toLocaleLowerCase() === name\n      );\n\n      if (isExists) {\n        setError(`${name} is alredy in your contact list`);\n      } else if (editContact) {\n        dispatch(operations.updateContact({ id: editContact.id, values }));\n        closeEditModal();\n        resetForm();\n      } else {\n        dispatch(operations.addContact(values));\n        resetForm();\n      }\n    },\n  });\n\n  return (\n    <>\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        minHeight=\"20vh\"\n      >\n        <form onSubmit={formik.handleSubmit} autoComplete=\"off\">\n          <TextField\n            fullWidth\n            id=\"name\"\n            name=\"name\"\n            label=\"Enter your contact name\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            error={formik.touched.name && Boolean(formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n            sx={{ marginTop: '15px' }}\n          />\n          <TextField\n            InputProps={{\n              inputComponent: PhoneMask,\n            }}\n            fullWidth\n            id=\"number\"\n            name=\"number\"\n            label=\"Enter phone number\"\n            value={formik.values.number}\n            onChange={formik.handleChange}\n            error={formik.touched.number && Boolean(formik.errors.number)}\n            helperText={formik.touched.number && formik.errors.number}\n            sx={{ marginTop: '15px' }}\n          />\n          {error && <div className={css.errorMessage}>{error}</div>}\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            fullWidth\n            type=\"submit\"\n            sx={{ marginTop: '15px' }}\n          >\n            {editContact ? 'Edit Contact' : 'Add Contact'}\n          </Button>\n        </form>\n      </Box>\n    </>\n  );\n};\n\nContactForm.propTypes = {\n  editContact: PropTypes.shape({\n    name: PropTypes.string,\n    number: PropTypes.string,\n    id: PropTypes.string,\n  }),\n  closeEditModal: PropTypes.func,\n};\n\nexport default ContactForm;\n","import css from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { operations, selectors } from '../../redux/contacts';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Box, ListItemButton, ListItemIcon } from '@mui/material';\nimport { AccountCircle, EditOutlined } from '@mui/icons-material';\nimport Modal from '@mui/material/Modal';\nimport { useState } from 'react';\nimport ContactForm from 'components/ContactForm/ContactForm';\n\nconst ContactList = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [editContact, setEditContact] = useState(null);\n\n  const toggleModal = editContanct => {\n    setIsOpen(isOpen => !isOpen);\n    setEditContact(editContanct);\n  };\n\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectors.selectFilteredContacts);\n\n  const onRemoveContact = id => {\n    dispatch(operations.deleteContact(id));\n  };\n\n  return (\n    <div>\n      <List dense={true}>\n        {filteredContacts.map(item => {\n          return (\n            <ListItem key={item.id} sx={{ p: 0 }}>\n              <ListItemAvatar>\n                <Avatar>\n                  <AccountCircle color=\"secondary\" />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                className={css.contactItem}\n                sx={{ flexGrow: 2, flexBasis: '100%' }}\n                primary={item.name}\n                secondary={true ? `${item.number}` : null}\n              />\n              <ListItemButton disableGutters>\n                <ListItemIcon sx={{ marginLeft: '15px' }}>\n                  <EditOutlined\n                    onClick={() => toggleModal(item)}\n                    color=\"info\"\n                  />\n                </ListItemIcon>\n              </ListItemButton>\n              <ListItemButton disableGutters>\n                <ListItemIcon sx={{ marginLeft: '10px' }}>\n                  <DeleteIcon\n                    onClick={() => onRemoveContact(item.id)}\n                    color=\"info\"\n                  />\n                </ListItemIcon>\n              </ListItemButton>\n            </ListItem>\n          );\n        })}\n      </List>\n      <Modal\n        open={isOpen}\n        onClose={toggleModal}\n        aria-labelledby=\"parent-modal-title\"\n        aria-describedby=\"parent-modal-description\"\n      >\n        <Box className={css.modalBody}>\n          {editContact && (\n            <ContactForm\n              editContact={editContact}\n              closeEditModal={toggleModal}\n            />\n          )}\n        </Box>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectors } from '../../redux/contacts';\nimport { setFilter } from '../../redux/contacts/filterSlice';\nimport { InputAdornment, TextField } from '@mui/material';\nimport { Search } from '@mui/icons-material';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectors.selectFilter);\n\n  const onChange = e => {\n    dispatch(setFilter(e.target.value.toLowerCase()));\n  };\n\n  return (\n    <>\n      <TextField\n        id=\"input-with-icon-textfield\"\n        label=\"Search for contacts\"\n        onChange={onChange}\n        value={filter}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <Search />\n            </InputAdornment>\n          ),\n        }}\n        fullWidth\n        sx={{ marginTop: '50px' }}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Contacts_wrapper__s7EJR\",\"phonebook\":\"Contacts_phonebook__G9bQK\",\"contacts\":\"Contacts_contacts__gVK0J\",\"headerColor\":\"Contacts_headerColor__FwFbY\"};","import ContactList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\nimport styles from './Contacts.module.css';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { operations, selectors } from '../../redux/contacts';\nimport { CircularProgress } from '@mui/material';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectors.selectIsLoading);\n  const hasContacts = useSelector(selectors.selectHasContacts);\n  const error = useSelector(selectors.selectError);\n\n  useEffect(() => {\n    dispatch(operations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.wrapper}>\n      <h2 className={styles.phonebook}>\n        Welcome to the <span className={styles.headerColor}>fone</span>book\n      </h2>\n      <ContactForm />\n      {hasContacts && (\n        <>\n          <Filter />\n          {isLoading && !error && (\n            <CircularProgress\n              sx={{ display: 'block', margin: '20px auto' }}\n              color=\"inherit\"\n            />\n          )}\n          <ContactList />\n        </>\n      )}\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectHasContacts","length","selectFilteredContacts","createSelector","name","toLowerCase","includes","React","props","ref","onChange","other","mask","definitions","inputRef","onAccept","value","target","overwrite","validationSchema","yup","shape","max","required","number","phone","editContact","closeEditModal","dispatch","useDispatch","useSelector","selectors","useState","setError","formik","useFormik","initialValues","onSubmit","values","resetForm","trim","some","item","toLocaleLowerCase","operations","updateContact","id","addContact","Box","display","justifyContent","alignItems","minHeight","handleSubmit","autoComplete","TextField","fullWidth","label","handleChange","touched","Boolean","errors","helperText","sx","marginTop","InputProps","inputComponent","PhoneMask","className","css","Button","color","variant","type","isOpen","setIsOpen","setEditContact","toggleModal","editContanct","filteredContacts","List","dense","map","ListItem","p","ListItemAvatar","Avatar","AccountCircle","ListItemText","flexGrow","flexBasis","primary","secondary","ListItemButton","disableGutters","ListItemIcon","marginLeft","EditOutlined","onClick","Delete","deleteContact","Modal","open","onClose","e","setFilter","startAdornment","InputAdornment","position","Search","Contacts","hasContacts","useEffect","fetchContacts","styles","CircularProgress","margin"],"sourceRoot":""}