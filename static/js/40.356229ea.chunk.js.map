{"version":3,"file":"static/js/40.356229ea.chunk.js","mappings":"qNACA,EAAuB,2B,qECSjBA,EAAmBC,EAAAA,SAAaC,MAAM,CAC1CC,KAAMF,EAAAA,OAAW,mBAAmBG,SAAS,oBAC7CC,MAAOJ,EAAAA,OACG,oBACPI,MAAM,uBACND,SAAS,qBACZE,SAAUL,EAAAA,OACA,uBACPM,IAAI,EAAG,qDACPH,SAAS,0BAGDI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbV,KAAM,GACNE,MAAO,GACPC,SAAU,IAEZN,iBAAkBA,EAClBc,SAAU,SAAAC,GACRN,GACEO,EAAAA,EAAAA,IAAS,CACPb,KAAMY,EAAOZ,KACbE,MAAOU,EAAOV,MACdC,SAAUS,EAAOT,WAGtB,IAGH,OACE,SAACW,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAASC,WAAW,SAAvD,UACE,kBACEC,UAAWC,EACXR,SAAUH,EAAOY,aACjBC,aAAa,MAHf,WAKE,iDACA,sDAC2B,SAAC,KAAD,CAASC,GAAG,SAAZ,wBAE3B,SAACC,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,OACHzB,KAAK,OACL0B,MAAM,OACNC,MAAOnB,EAAOI,OAAOZ,KACrB4B,SAAUpB,EAAOqB,aACjBC,MAAOtB,EAAOuB,QAAQ/B,MAAQgC,QAAQxB,EAAOyB,OAAOjC,MACpDkC,WAAY1B,EAAOuB,QAAQ/B,MAAQQ,EAAOyB,OAAOjC,KACjDmC,GAAI,CAAEC,UAAW,WAEnB,SAACb,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,QACHzB,KAAK,QACL0B,MAAM,QACNC,MAAOnB,EAAOI,OAAOV,MACrB0B,SAAUpB,EAAOqB,aACjBC,MAAOtB,EAAOuB,QAAQ7B,OAAS8B,QAAQxB,EAAOyB,OAAO/B,OACrDgC,WAAY1B,EAAOuB,QAAQ7B,OAASM,EAAOyB,OAAO/B,MAClDiC,GAAI,CAAEC,UAAW,WAEnB,SAACb,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,WACHzB,KAAK,WACL0B,MAAM,WACNW,KAAK,WACLV,MAAOnB,EAAOI,OAAOT,SACrByB,SAAUpB,EAAOqB,aACjBC,MAAOtB,EAAOuB,QAAQ5B,UAAY6B,QAAQxB,EAAOyB,OAAO9B,UACxD+B,WAAY1B,EAAOuB,QAAQ5B,UAAYK,EAAOyB,OAAO9B,SACrDgC,GAAI,CAAEC,UAAW,WAEnB,SAACE,EAAA,EAAD,CACEC,MAAM,UACNC,QAAQ,YACRhB,WAAS,EACTa,KAAK,SACLF,GAAI,CAAEC,UAAW,QALnB,0BAYP,ECjGc,SAASK,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAACrC,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\",\"label\":\"RegisterForm_label__4pTXF\"};","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport css from './RegisterForm.module.css';\nimport { useFormik } from 'formik';\nimport { TextField } from '@mui/material';\nimport { Button } from '@mui/material';\nimport { Box } from '@mui/material';\nimport * as yup from 'yup';\nimport { NavLink } from 'react-router-dom';\n\nconst validationSchema = yup.object().shape({\n  name: yup.string('Enter your name').required('Name is required'),\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      dispatch(\n        register({\n          name: values.name,\n          email: values.email,\n          password: values.password,\n        })\n      );\n    },\n  });\n\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n      <form\n        className={css.form}\n        onSubmit={formik.handleSubmit}\n        autoComplete=\"off\"\n      >\n        <h2>Create your account</h2>\n        <p>\n          Already have an account? <NavLink to=\"/login\">Log in</NavLink>\n        </p>\n        <TextField\n          fullWidth\n          id=\"name\"\n          name=\"name\"\n          label=\"name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n          sx={{ marginTop: '15px' }}\n        />\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n          sx={{ marginTop: '15px' }}\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n          sx={{ marginTop: '15px' }}\n        />\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          fullWidth\n          type=\"submit\"\n          sx={{ marginTop: '15px' }}\n        >\n          Register\n        </Button>\n      </form>\n    </Box>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["validationSchema","yup","shape","name","required","email","password","min","RegisterForm","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","register","Box","display","justifyContent","alignItems","className","css","handleSubmit","autoComplete","to","TextField","fullWidth","id","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","sx","marginTop","type","Button","color","variant","Register","Helmet"],"sourceRoot":""}